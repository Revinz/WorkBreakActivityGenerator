/**
 * @overview
 * Assertation module for chrome.cookies.* methods
 */

'use strict';

Object.defineProperty(exports, '__esModule', {
    value: true
});
exports.get = get;
exports.getAll = getAll;
exports.set = set;
exports.remove = remove;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

/**
 * assert chrome.cookies.get arguments
 * @param {CookieCriteria} details
 * @param {Function} callback
 * @throws TypeError
 */

function get(details, callback) {
    if (!_lodash2['default'].isString(details.name)) {
        throwError('name');
    }

    if (!_lodash2['default'].isString(details.url)) {
        throwError('url');
    }

    if (!_lodash2['default'].isFunction(callback)) {
        throwError('callback');
    }
}

/**
 * assert chrome.cookie.getAll arguments
 * @param {AllCookieCriteria} details
 * @param {Function} callback
 */

function getAll(details, callback) {
    if (!_lodash2['default'].isPlainObject(details)) {
        throwError('details');
    }
    if (!_lodash2['default'].isFunction(callback)) {
        throwError('callback');
    }
}

/**
 * assert chrome.cookies.set arguments
 * @param {AllCookieCriteria} details
 */

function set(details) {
    if (!_lodash2['default'].isString(details.url)) {
        throwError('url');
    }
}

/**
 * assert chrome.cookies.remove arguments
 * @param {Object} details
 */

function remove(details) {
    if (!_lodash2['default'].isString(details.url)) {
        throwError('url');
    }
    if (!_lodash2['default'].isString(details.name)) {
        throwError('name');
    }
}

/**
 * throws type error
 * @param {String} argument
 */
function throwError(argument) {
    throw new Error(argument + ' required');
}